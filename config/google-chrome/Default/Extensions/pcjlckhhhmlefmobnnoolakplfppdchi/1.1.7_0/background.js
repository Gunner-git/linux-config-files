(()=>{"use strict";const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const s=new Uint8Array(16);function n(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(s)}const a=[];for(let e=0;e<256;++e)a.push((e+256).toString(16).slice(1));const r=function(t,s,r){if(e.randomUUID&&!s&&!t)return e.randomUUID();const o=(t=t||{}).random||(t.rng||n)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,s){r=r||0;for(let e=0;e<16;++e)s[r+e]=o[e];return s}return function(e,t=0){return a[e[t+0]]+a[e[t+1]]+a[e[t+2]]+a[e[t+3]]+"-"+a[e[t+4]]+a[e[t+5]]+"-"+a[e[t+6]]+a[e[t+7]]+"-"+a[e[t+8]]+a[e[t+9]]+"-"+a[e[t+10]]+a[e[t+11]]+a[e[t+12]]+a[e[t+13]]+a[e[t+14]]+a[e[t+15]]}(o)};function o(){return r()}function i(e,t={}){return console.debug("proxyFetch",e,t),new Promise(((s,n)=>{const a=chrome.runtime.connect({name:o()});a.onDisconnect.addListener((()=>{n(new Error("Proxy fetch aborted: Connection closed"))})),a.postMessage({url:e,options:t,accessToken:"YOUR_ACCESS_TOKEN"}),a.onMessage.addListener((e=>{if("PROXY_RESPONSE_METADATA"===e.type){const{status:t,statusText:n,headers:a}=e.metadata,r=new Response(null,{status:t,statusText:n,headers:a});s(r)}else"PROXY_RESPONSE_BODY_CHUNK"===e.type?e.done&&a.disconnect():"PROXY_ERROR"===e.type&&(n(new Error(`Proxy fetch error: ${e.message}`)),a.disconnect())}))}))}const c="CHATGPT_CLOUDFLARE";class u extends Error{constructor(e,t){super(e),this.code=t}}const h=new class{fetch(e,t){return fetch(e,t)}},d=new class{async findExistingProxyTab(){const e=await(chrome?.tabs?.query({pinned:!0}));if(!e)return;const t=await Promise.all(e?.map((async e=>e.url?e.url:chrome.tabs.sendMessage(e.id,"url").catch((()=>{})))));for(let s=0;s<t.length;s++)if(t[s]?.startsWith("https://chat.openai.com"))return e[s]}waitForProxyTabReady(){return new Promise(((e,t)=>{const s=async function(t,a){if("PROXY_TAB_READY"===t.event)return console.debug("new proxy tab ready"),chrome.runtime.onMessage.removeListener(s),clearTimeout(n),e(a.tab),!0},n=setTimeout((()=>{chrome.runtime.onMessage.removeListener(s),t(new Error("Timeout waiting for ChatGPT tab"))}),1e4);chrome.runtime.onMessage.addListener(s)}))}async createProxyTab(){const e=this.waitForProxyTabReady();return chrome.tabs.create({url:"https://chat.openai.com",pinned:!0}),e}async getProxyTab(){let e=await this.findExistingProxyTab();return e||(e=await this.createProxyTab()),e}async refreshProxyTab(){const e=await this.findExistingProxyTab();if(!e)return void await this.createProxyTab();const t=this.waitForProxyTabReady();return chrome.tabs.reload(e.id),t}async fetch(e,t){const s=await this.getProxyTab(),n=await i(s.id,e);return 403===n.status?(await this.refreshProxyTab(),i(s.id,e)):n}},l=new class{async findExistingProxyTab(){const e=await(chrome?.tabs?.query({pinned:!0}));if(!e)return;const t=await Promise.all(e?.map((async e=>e.url?e.url:chrome.tabs.sendMessage(e.id,"url").catch((()=>{})))));for(let s=0;s<t.length;s++)if(t[s]?.startsWith("https://www.youtube.com"))return e[s]}waitForProxyTabReady(){return new Promise(((e,t)=>{const s=async function(t,a){if("PROXY_TAB_READY"===t.event)return console.debug("new proxy tab ready"),chrome.runtime.onMessage.removeListener(s),clearTimeout(n),e(a.tab),!0},n=setTimeout((()=>{chrome.runtime.onMessage.removeListener(s),t(new Error("Timeout waiting for Youtube tab"))}),1e4);chrome.runtime.onMessage.addListener(s)}))}async createProxyTab(){const e=this.waitForProxyTabReady();return chrome.tabs.create({url:"https://www.youtube.com",pinned:!0}),e}async getProxyTab(){let e=await this.findExistingProxyTab();return e||(e=await this.createProxyTab()),e}async refreshProxyTab(){const e=await this.findExistingProxyTab();if(!e)return void await this.createProxyTab();const t=this.waitForProxyTabReady();return chrome.tabs.reload(e.id),t}async fetch(e,t){const s=await this.getProxyTab(),n=await i(s.id,e);return 403===n.status?(await this.refreshProxyTab(),i(s.id,e)):n}},y="ChatGPTUser";function m(e){chrome.storage.local.set({[y]:e?JSON.stringify(e):null})}function w(){return new Promise((e=>{chrome.storage.local.get([y],(function(t){const s=t[y]?JSON.parse(t[y]):null;e(s)}))}))}function p(){return new Promise((e=>{chrome.storage.local.get("deviceId",(t=>{let s=t.deviceId;s?e(s):(s="device_"+o(),chrome.storage.local.set({deviceId:s},(()=>{e(s)})))}))}))}const f="AdSpeedUpUser";function g(e){chrome.storage.local.set({[f]:e?JSON.stringify(e):null})}const b=new class{constructor(){this.requester=h,d.findExistingProxyTab().then((e=>{e&&this.switchRequester(d)}))}switchRequester(e){console.debug("client switchRequester",e),this.requester=e}async fetch(e,t){return this.requester.fetch(e,t)}async getAccessToken(){const e=await this.fetch("https://chat.openai.com/api/auth/session");if(403===e.status)throw new u("Please pass Cloudflare check",c);const t=await e.json().catch((()=>({})));if(!t.accessToken)throw m(null),new u("There is no logged-in ChatGPT account in this browser.","CHATGPT_UNAUTHORIZED");return m(t),t.accessToken}async getClientSession(){const e=await this.fetch("https://chat.openai.com/api/auth/session");if(403===e.status)throw new u("Please pass Cloudflare check",c);const t=await e.json().catch((()=>({})));if(t.accessToken)return m(t),t;m(null)}async registerWebsocket(){const e=await this.getAccessToken(),t=await this.fetch("https://chat.openai.com/backend-api/register-websocket",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}),s=await t.json().catch((()=>({}))),n=s?.wss_url;var a;return a=n,new Promise((e=>{chrome.storage.local.set({wssUrl:a},(()=>{e()}))})),n}async requestBackendAPIWithToken(e,t,s,n){return this.fetch(`https://chat.openai.com/backend-api${s}`,{method:t,headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:void 0===n?void 0:JSON.stringify(n)})}async getModels(e){return(await this.requestBackendAPIWithToken(e,"GET","/models").then((e=>e.json()))).models}async generateChatTitle(e,t,s){await this.requestBackendAPIWithToken(e,"POST",`/conversation/gen_title/${t}`,{message_id:s})}async fixAuthState(){this.requester===d?await d.refreshProxyTab():(await d.getProxyTab(),this.switchRequester(d))}},T=new class{constructor(){this.requester=h,l.findExistingProxyTab().then((e=>{e&&this.switchRequester(l)}))}switchRequester(e){console.debug("client switchRequester",e),this.requester=e}async fetch(e,t){return this.requester.fetch(e,t)}async getUserEmail(){const e=await this.fetch("https://www.youtube.com/getAccountSwitcherEndpoint");if(200!==e.status)return"";const t=await(e?.text()),s=t?.replace(")]}'","");if(!s)return"";const n=JSON.parse(s),a=n?.data?.actions;if(!a||0===a.length)return"";const r=a[0]?.getMultiPageMenuAction?.menu?.multiPageMenuRenderer?.sections;return r&&0!==r.length?r[0]?.accountSectionListRenderer?.header?.googleAccountHeaderRenderer?.email?.simpleText??"":""}async fixAuthState(){this.requester===l?await l.refreshProxyTab():(await l.getProxyTab(),this.switchRequester(l))}},P="AdSpeedUpAdsSkipCount";function x(e){chrome.storage.local.set({[P]:0|e})}const R="AdSpeedUpAIFeaturesToggle";function E(e){chrome.storage.local.set({[R]:e||!1})}const A="https://prod-backend.adspeedup.com/api/v1";chrome.runtime.onConnect.addListener((e=>{console.debug("proxy connection",e.name);const t=new AbortController;e.onDisconnect.addListener((()=>{t.abort()})),e.onMessage.addListener((async s=>{console.debug("proxy fetch",s.url,s.options);const{url:n,options:a,accessToken:r}=s;a.headers={...a.headers,Authorization:`Bearer ${r}`};try{const s=await fetch(n,{...a,signal:t.signal}),r={status:s.status,statusText:s.statusText,headers:Object.fromEntries(s.headers.entries())};e.postMessage({type:"PROXY_RESPONSE_METADATA",metadata:r});for await(const t of async function*(e){const t=e.getReader();try{for(;;){const{done:e,value:s}=await t.read();if(e)return;yield s}}finally{t.releaseLock()}}(s.body))e.postMessage({type:"PROXY_RESPONSE_BODY_CHUNK",value:(o=t,(new TextDecoder).decode(o)),done:!1});e.postMessage({type:"PROXY_RESPONSE_BODY_CHUNK",done:!0})}catch(t){e.postMessage({type:"PROXY_ERROR",message:t.message})}var o}))})),chrome.runtime.onInstalled.addListener((function(e){b.getClientSession().finally((()=>async function(e={}){let t={...e,deviceId:await p()};const s=await w();if(s){const{user:e}=s;t.name=e?.name,t.email=e?.email,t.profilePic=e?.image||e?.picture||""}try{const e=await T.getUserEmail();e&&(t.youtubeEmail=e)}catch(e){console.log(e)}try{const e=await fetch(`${A}/owner/initialize`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),{owner:s}=await e.json();g(s),x(s.planhistory[0].usedQuanity[0]),E(s.aiFeatures)}catch(e){x(0),E(!0)}}())),e.reason===chrome.runtime.OnInstalledReason.INSTALL&&chrome.tabs.create({url:"https://www.youtube.com"}),e.reason===chrome.runtime.OnInstalledReason.UPDATE&&chrome.tabs.create({url:"https://www.adspeedup.com/updated/"})})),chrome.runtime.setUninstallURL("https://link.adspeedup.com/uninstall"),chrome.runtime.onStartup.addListener((async()=>{await async function(){try{const e=await new Promise((e=>{chrome.storage.local.get([f],(function(t){const s=t[f]?JSON.parse(t[f]):null;e(s)}))}));if(e?.youtubeEmail)return;const t=await T.getUserEmail();if(!t)return;let s={youtubeEmail:t,deviceId:await p()};const n=await w();if(n){const{user:e}=n;s.name=e?.name,s.email=e?.email,s.profilePic=e?.image||e?.picture||""}const a=await fetch(`${A}/owner/initialize`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}),{owner:r}=await a.json();g(r),x(r.planhistory[0].usedQuanity[0]),E(r.aiFeatures)}catch(e){console.log(e)}}()})),chrome.action.onClicked.addListener((e=>{e?.url?.includes("youtube.com")&&chrome.tabs.sendMessage(e.id,{type:"SHOW_OVERLAY"})})),chrome.tabs.onUpdated.addListener(((e,t,s)=>{"complete"===t?.status&&s?.url?.includes("youtube.com")&&chrome.tabs.sendMessage(e,{type:"ADSPEEDUP"}),"complete"===t?.status&&s?.url?.includes("youtube.com/watch")&&chrome.tabs.sendMessage(e,{type:"PREPARE_YOUTUBE_WATCH",tabUrl:s.url})}))})();